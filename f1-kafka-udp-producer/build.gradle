import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'idea'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.0'
}

group = 'com.mattdag'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.kafka:spring-kafka"

    implementation "io.github.oshai:kotlin-logging-jvm:$kotlinLoggingVersion"
    implementation "io.ppatierno:f1-telemetry:$f1TelemeteryVersion"
    implementation "io.netty:netty-all:$nettyVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    implementation "org.valiktor:valiktor-core:$valiktorVersion"
    implementation project(path: ':common')
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.kafka:spring-kafka-test"

    kapt "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = JvmTarget.JVM_17
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
